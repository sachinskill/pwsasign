Question 1: Analyze the time complexity of the following Java code and suggest a way to improve it:
int sum=0;
for(int i=1; i<=n; i++) {
for(int j=1; j<=i; j++){
	sum++;
} 
}
ANSWER:
Time complexity : O(n^2)
Int sum=0;
Sum=(n*(n+1))/2;
Space Complexity: O(1)

Question 2: Find the value of T(2) for the recurrence relation T(n) = 3T(n-1) + 12n, given that T(O)=5.
AS T(0)=5  therefore To find T(2), we need to calculate T(1) first
	T(1)=3T(0)+12*1
	T(1)=3*5+12
	T(1)=15+12=27
	T(2)=3T(2-1)+12*2
	T(2)=3T(1)+24
	T(2)=3*27+24=105
	T(2)=105
	
Question 3: Given a recurrence relation, solve it using a substitution method.
                      Relation : T(n) = T(n -1) + c
ANSWER:
  	recurrence relation: T(n) = T(n - 1) + c	..........eq1
Step1:
Let substitutie T(n)=T(n-1) 
Therefore, T(n-1)=[T(n-1-1)+c]+c
       T(n-1)=[T(n-2)+c]+c  
	T(n-1)=T(n-2)+2c 			..........eq2
Step2:
Let substitute T(n)= T(n-2)
Therefore, T(n-2)=[T(n-3)+2c]+c
	T(n-2)=T(n-3)+3c 			..........eq3
As we can see a pattern is forming therefore 
Let's continue this process k times: T(n) = T(n - k) + kc
We have to do it until the base case.
therefore, The base case will be when n-k = 0, or when k = n: T(n) = T(0) + nc
 we want to know the value of T(0).  Let's say T(0) = a( constant).
Substituting this in: T(n) = a + nc
Therefore, the solution to the recurrence relation T(n) = T(n-1) + c is:
T(n) = a + nc

	

Question 4: Given a recurrence relation:
                      T(n) = 16T(n/4) + n2logn
                      Find the time complexity of this relation using the master theorem.
Answer:
Step 1:Let check is it in standard form that is T(n)=aT(n/b)+f(n)
a=12, b=4, f(n)=n^2logn 
k=log^a_b=2
therefore a=16 b^k=4^2=16
As we can see a=b^k
Step2:CASES
Case 1: if a=b^k then Check p
F(n)=n2logn therefore p=1 as from(n^klog^pn)
Therefore 
T(n)=n^loga_b log^p+1n
Therefore Answer:
T(n)=O(n^2 log^2n)




Question 5: Solve the following recurrence relation using the recursion tree method T(n)=2T(n/2)+n



